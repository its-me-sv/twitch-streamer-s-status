{"version":3,"sources":["assets/Loader.svg","containers/app.styles.jsx","components/header/header.styles.jsx","components/header/header.component.jsx","components/search-box/search-box.styles.jsx","redux/search-field/search-field.types.js","redux/search-field/search-field-actions.js","components/search-box/search-box.component.jsx","components/default-servers/default-servers.styles.jsx","components/server-card/server-card.styles.jsx","components/server-card/server-card.component.jsx","components/default-servers/default-servers.component.jsx","components/user-card/user-card.styles.jsx","components/user-card/user-card.component.jsx","redux/default-servers/default-servers.types.js","redux/default-servers/default-servers.data.js","redux/default-servers/default-servers.actions.js","redux/fetch-user/fetch-user.types.js","redux/fetch-user/fetch-user.actions.js","containers/app.container.jsx","redux/search-field/search-field.reducer.js","redux/default-servers/default-servers.utils.js","redux/default-servers/default-servers.reducer.js","redux/fetch-user/fetch-user.reducer.js","redux/root-reducer.js","redux/store.js","index.js"],"names":["_circle","AppContainerStyles","styled","div","HeaderTextStyles","span","Header","FieldStyles","FieldLabelStyles","InputFieldStyles","input","searchFieldTypes","ON_SEARCH_CHANGE","onSearchFieldChange","event","type","payload","target","value","connect","searchFieldText","searchField","dispatch","onSearchChange","placeholder","onChange","DefaultServersStyles","GridBoxStyles","_excluded","_extends","Object","assign","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgLoader","_ref","svgRef","title","titleId","props","xmlns","xmlnsXlink","style","margin","background","display","shapeRendering","width","height","viewBox","preserveAspectRatio","ref","id","cx","cy","fill","stroke","strokeWidth","r","strokeDasharray","attributeName","repeatCount","dur","values","keyTimes","ForwardRef","CardStyles","a","UsernameStyles","StatusStyles","ServerCard","user_name","game_name","thumbnail_url","href","rel","alt","src","replace","defaultServers","serversData","isPending","error","map","obj","idx","UserCardStyles","ErrorStyles","fetchUser","fetchedUser","display_name","description","profile_image_url","defaultServersTypes","DEFAULT_SERVERS_PENDING","DEFAULT_SERVERS_SUCCESS","DEFAULT_SERVERS_FAILURE","urlToFetch","streamsUrl","join","startToFetchDefaultServers","fetch","method","headers","body","JSON","stringify","then","resp","json","data","catch","fetchUserTypes","FETCH_USER_PENDING","FETCH_USER_SUCCESS","FETCH_USER_FAILURE","RESET_USER","onFetchUserStart","username","response","App","handleEnterKey","keyCode","document","addEventListener","fetchDefaultServers","removeEventListener","clearUser","React","Component","INITIAL_STATE","searchFieldReducer","state","action","processData","payLoadData","dataToReturn","serverName","serverStatus","find","undefined","push","sort","b","defaultServersReducer","fetchUserReducer","rootReducer","combineReducers","middlewares","thunkMiddleware","store","createStore","applyMiddleware","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3172d050.chunk.js","sourcesContent":["var _circle;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgLoader(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    style: {\n      margin: \"auto\",\n      background: \"rgb(13, 17, 23)\",\n      display: \"block\",\n      shapeRendering: \"auto\"\n    },\n    width: \"101px\",\n    height: \"101px\",\n    viewBox: \"0 0 100 100\",\n    preserveAspectRatio: \"xMidYMid\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 50,\n    cy: 50,\n    fill: \"none\",\n    stroke: \"#1c90dd\",\n    strokeWidth: 10,\n    r: 31,\n    strokeDasharray: \"146.08405839192537 50.69468613064179\"\n  }, /*#__PURE__*/React.createElement(\"animateTransform\", {\n    attributeName: \"transform\",\n    type: \"rotate\",\n    repeatCount: \"indefinite\",\n    dur: \"1s\",\n    values: \"0 50 50;360 50 50\",\n    keyTimes: \"0;1\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLoader);\nexport default __webpack_public_path__ + \"static/media/Loader.da82c788.svg\";\nexport { ForwardRef as ReactComponent };","import styled from \"styled-components\";\r\n\r\nexport const AppContainerStyles = styled.div`\r\n    margin-top: 3.6rem;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const HeaderTextStyles = styled.span`\r\n    font-size: 2.4rem;\r\n    text-align: center;\r\n`;","import React from 'react';\r\n\r\n// Styles\r\nimport {HeaderTextStyles} from './header.styles';\r\n\r\nconst Header = () => (\r\n    <HeaderTextStyles>\r\n        Twitch Streamer's Status Viewer\r\n    </HeaderTextStyles>\r\n);\r\n\r\nexport default Header;","import styled from \"styled-components\";\r\n\r\nexport const FieldStyles = styled.div`\r\n    margin-top: 1.4rem;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nexport const FieldLabelStyles = styled.span`\r\n    text-align: center;\r\n    font-size: 1.4rem;\r\n    font-weight: normal;\r\n`;\r\n\r\nexport const InputFieldStyles = styled.input`\r\n    margin-top: 0.7rem;\r\n    margin-left: 0.6rem;\r\n    padding: 0.4rem;\r\n    background-color: #161b22;\r\n    border-radius: 1rem;\r\n    font-size: 1.2rem;\r\n    color: white;\r\n    border: 0.2rem solid rgba(55, 106, 176, 0.5);\r\n    outline: none;\r\n    width: auto;\r\n\r\n    &:focus {\r\n        border: 0.2rem solid rgb(28, 144, 221);\r\n        border-radius: 1rem;\r\n    }\r\n`;","const searchFieldTypes = {\r\n    ON_SEARCH_CHANGE: 'ON_SEARCH_CHANGE'\r\n};\r\n\r\nexport default searchFieldTypes;","import searchFieldTypes from \"./search-field.types\";\r\n\r\nconst onSearchFieldChange = event => ({\r\n    type: searchFieldTypes.ON_SEARCH_CHANGE,\r\n    payload: event.target.value\r\n});\r\n\r\nexport default onSearchFieldChange;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\n// Styles\r\nimport { \r\n    FieldStyles,\r\n    FieldLabelStyles,\r\n    InputFieldStyles\r\n} from './search-box.styles';\r\n\r\n// Actions\r\nimport onSearchFieldChange from '../../redux/search-field/search-field-actions';\r\n\r\nconst SearchBox = ({searchFieldText, onSearchChange}) => {\r\n    return (\r\n        <FieldStyles>\r\n            <FieldLabelStyles>Search Streamer</FieldLabelStyles>\r\n            <InputFieldStyles\r\n                type=\"text\"\r\n                placeholder=\"Eg: radextrem\"\r\n                value={searchFieldText}\r\n                onChange={onSearchChange}\r\n            />\r\n        </FieldStyles>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({searchField}) => ({\r\n    searchFieldText: searchField.searchFieldText\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onSearchChange: event => dispatch(onSearchFieldChange(event))\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(SearchBox);","import styled from \"styled-components\";\r\n\r\nexport const DefaultServersStyles = styled.div`\r\n    margin-top: 2.1rem;\r\n`;\r\n\r\nexport const GridBoxStyles = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(3, 1fr);\r\n    @media only screen and (max-width: 768px) {\r\n        grid-template-columns: 1fr;\r\n    }\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const CardStyles = styled.a`\r\n    text-decoration: none;\r\n    color: white;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: #161b22;\r\n    padding: 0;\r\n    border-radius: 1rem;\r\n    text-align: center;\r\n    width: 70%;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    margin-top: 1.4rem;\r\n\r\n    &:hover {\r\n        border: 0.2rem solid aqua;\r\n    }\r\n\r\n    img {\r\n        margin-top: 1rem;\r\n        width: 70%;\r\n        height: 70%;\r\n        border-radius: 1rem;\r\n    }\r\n`;\r\n\r\nexport const UsernameStyles = styled.span`\r\n    margin-top: 1rem;\r\n    font-size: 1.8rem;\r\n`;\r\n\r\nexport const StatusStyles = styled.div`\r\n    margin-top: 0.5rem;\r\n    margin-bottom: 0.5rem;\r\n    font-size: 1.2rem;\r\n`;","import React from 'react';\r\n\r\n// Styles\r\nimport { \r\n    CardStyles,\r\n    UsernameStyles,\r\n    StatusStyles\r\n} from './server-card.styles';\r\n\r\nconst ServerCard = ({user_name, game_name, title=\"\", thumbnail_url}) => (\r\n    <CardStyles\r\n        href={`https://twitch.tv/${user_name}`}\r\n        title={`Head over to ${user_name}'s channel`}\r\n        target=\"_blank\"\r\n        rel=\"noreferrer\">\r\n        <img \r\n            alt=\"images\" \r\n            src={thumbnail_url.replace(\"{width}\", \"640\").replace(\"{height}\", \"480\")} \r\n        />\r\n        <UsernameStyles>{user_name}</UsernameStyles>\r\n        <StatusStyles>\r\n            {game_name.length > 0 ? `${game_name} ${title}` : \"Offline\"}\r\n        </StatusStyles>\r\n    </CardStyles>\r\n);\r\n\r\nexport default ServerCard;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n// Styles\r\nimport {\r\n    DefaultServersStyles,\r\n    GridBoxStyles\r\n} from './default-servers.styles';\r\n\r\n// Resources from assests\r\nimport { ReactComponent as Loader } from '../../assets/Loader.svg';\r\n\r\n// Components\r\nimport ServerCard from '../server-card/server-card.component';\r\n\r\nconst DefaultServers = ({ serversData, isPending, error }) => {\r\n    return (\r\n        <DefaultServersStyles>\r\n            {\r\n                isPending === true \r\n                ? <Loader />\r\n                : <GridBoxStyles>{\r\n                    serversData?.map((obj, idx) => \r\n                        <ServerCard \r\n                            key={idx}\r\n                            {...obj}\r\n                    />)\r\n                  }</GridBoxStyles>\r\n            }\r\n        </DefaultServersStyles>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({defaultServers: {serversData, isPending, error}}) => ({\r\n    serversData,\r\n    isPending,\r\n    error\r\n});\r\n\r\nexport default connect(mapStateToProps)(DefaultServers);","import styled from \"styled-components\";\r\n\r\nexport const UserCardStyles = styled.div`\r\n    margin-top: 1.4rem;\r\n`;\r\n\r\nexport const ErrorStyles = styled.div`\r\n    color: crimson;\r\n    margin-top: 20%;\r\n    font-size: 1.4rem;\r\n    border: 0.2rem solid crimson;\r\n    border-radius: 1rem;\r\n    padding: 1rem;\r\n`;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\n// Styles\r\nimport { \r\n    UserCardStyles,\r\n    ErrorStyles\r\n} from './user-card.styles';\r\n\r\n// Resources from assests\r\nimport {ReactComponent as Loader} from '../../assets/Loader.svg';\r\n\r\n// Components\r\nimport ServerCard from \"../server-card/server-card.component\";\r\n\r\nconst UserCard = ({isPending, fetchedUser}) => {\r\n    return (\r\n        <UserCardStyles>\r\n            {\r\n                isPending === true\r\n                ? <Loader />\r\n                : fetchedUser\r\n                ? <ServerCard \r\n                    user_name={fetchedUser.display_name} \r\n                    game_name={fetchedUser.description} \r\n                    thumbnail_url={fetchedUser.profile_image_url}\r\n                  />\r\n                : isPending === false && fetchedUser === null && <ErrorStyles>No User Found</ErrorStyles>\r\n            }\r\n        </UserCardStyles>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({fetchUser}) => ({\r\n    isPending: fetchUser.isPending,\r\n    fetchedUser: fetchUser.fetchedUser\r\n});\r\n\r\nexport default connect(mapStateToProps)(UserCard);","const defaultServersTypes = {\r\n    DEFAULT_SERVERS_PENDING: 'DEFAULT_SERVERS_PENDING',\r\n    DEFAULT_SERVERS_SUCCESS: 'DEFAULT_SERVERS_SUCCESS',\r\n    DEFAULT_SERVERS_FAILURE: 'DEFAULT_SERVERS_FAILURE'\r\n};\r\n\r\nexport default defaultServersTypes;","export const defaultServers = [\r\n    \"radextrem\",\r\n    \"ESL_SC2\", \r\n    \"OgamingSC2\", \r\n    \"aceu\", \r\n    \"freecodecamp\", \r\n    \"nosyy\", \r\n    \"shroud\", \r\n    \"Ninja\",\r\n    \"noobs2ninjas\"\r\n];\r\n\r\nconst streamsUrl = \"https://api.twitch.tv/helix/streams?\";\r\n\r\nexport const urlToFetch = streamsUrl + \"user_login=\" + defaultServers.join(\"&user_login=\");","import defaultServersTypes from \"./default-servers.types\";\r\n\r\nimport {urlToFetch} from './default-servers.data';\r\n\r\nconst startToFetchDefaultServers = () => dispatch => {\r\n    dispatch({\r\n        type: defaultServersTypes.DEFAULT_SERVERS_PENDING\r\n    });\r\n    fetch(\"https://desolate-island-20928.herokuapp.com/twitch-api\", {\r\n        method: \"POST\",\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({urlToFetch, type: 1})\r\n    })\r\n    .then(resp => resp.json())\r\n    .then(data => dispatch({\r\n        type: defaultServersTypes.DEFAULT_SERVERS_SUCCESS,\r\n        payload: data\r\n    }))\r\n    .catch(error => dispatch({\r\n        type: defaultServersTypes.DEFAULT_SERVERS_FAILURE,\r\n        payload: error\r\n    }));\r\n};\r\n\r\nexport default startToFetchDefaultServers;","const fetchUserTypes = {\r\n    FETCH_USER_PENDING: 'FETCH_USER_PENDING',\r\n    FETCH_USER_SUCCESS: 'FETCH_USER_SUCCESS',\r\n    FETCH_USER_FAILURE: 'FETCH_USER_FAILURE',\r\n    RESET_USER: 'RESET_USER'\r\n};\r\n\r\nexport default fetchUserTypes;","import fetchUserTypes from \"./fetch-user.types\";\r\n\r\nconst onFetchUserStart = username => dispatch => {\r\n    dispatch({\r\n        type:fetchUserTypes.FETCH_USER_PENDING\r\n    });\r\n    fetch(\"https://desolate-island-20928.herokuapp.com/twitch-api\", {\r\n        method: \"POST\",\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ \r\n            urlToFetch: `https://api.twitch.tv/helix/users?login=${username}`, \r\n            type: 0\r\n        })\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => dispatch({\r\n        type:fetchUserTypes.FETCH_USER_SUCCESS, \r\n        payload: data\r\n    }))\r\n    .catch(error => dispatch({\r\n        type: fetchUserTypes.FETCH_USER_FAILURE,\r\n        payload: error\r\n    }));\r\n};\r\n\r\nexport const resetUser = () => ({\r\n    type: fetchUserTypes.RESET_USER\r\n});\r\n\r\nexport default onFetchUserStart;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\n// Styles\r\nimport {AppContainerStyles} from './app.styles';\r\n\r\n// Components\r\nimport Header from '../components/header/header.component';\r\nimport SearchBox from '../components/search-box/search-box.component';\r\nimport DefaultServers from '../components/default-servers/default-servers.component';\r\nimport UserCard from '../components/user-card/user-card.component';\r\n\r\n// Actions\r\nimport startToFetchDefaultServers from '../redux/default-servers/default-servers.actions';\r\nimport onFetchUserStart, {resetUser} from '../redux/fetch-user/fetch-user.actions';\r\n\r\nclass App extends React.Component {\r\n    handleEnterKey = ({keyCode}) => {\r\n        if (keyCode !== 13) return;\r\n        const {fetchUser, searchFieldText} = this.props;\r\n        if (searchFieldText.length < 1) return;\r\n        fetchUser(searchFieldText);\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('keypress', this.handleEnterKey);\r\n        this.props.fetchDefaultServers();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('keypress', this.handleEnterKey);\r\n    }\r\n    \r\n    render() {\r\n        const {searchFieldText, clearUser} = this.props;\r\n        if (searchFieldText < 1)\r\n            clearUser();\r\n        return (\r\n            <AppContainerStyles>\r\n                <Header />\r\n                <SearchBox />\r\n                {\r\n                    searchFieldText < 1\r\n                    ? <DefaultServers />\r\n                    : <UserCard />\r\n                }\r\n            </AppContainerStyles>\r\n        );\r\n    }\r\n};\r\n\r\nconst mapStateToProps = ({ searchField }) => ({\r\n    searchFieldText: searchField.searchFieldText\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    fetchDefaultServers: () => dispatch(startToFetchDefaultServers()),\r\n    fetchUser: username => dispatch(onFetchUserStart(username)),\r\n    clearUser: () => dispatch(resetUser())\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(App);","import searchFieldTypes from \"./search-field.types\";\r\n\r\nconst INITIAL_STATE = {\r\n    searchFieldText: \"\"\r\n};\r\n\r\nconst searchFieldReducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case searchFieldTypes.ON_SEARCH_CHANGE: \r\n            return {\r\n                ...state,\r\n                searchFieldText: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default searchFieldReducer;","import {defaultServers} from './default-servers.data';\r\n\r\nconst processData = payLoadData => {\r\n    const dataToReturn = [];\r\n    for (let serverName of defaultServers) {\r\n        let serverStatus = payLoadData.find(\r\n            ({user_name}) => user_name === serverName\r\n        );\r\n        if (serverStatus === undefined)\r\n            dataToReturn.push({\r\n                user_name: serverName,\r\n                game_name: \"\",\r\n                title: \"\",\r\n                thumbnail_url: \"https://image.flaticon.com/icons/png/512/1661/1661966.png\"\r\n            });\r\n        else\r\n            dataToReturn.push({\r\n                user_name: serverStatus.user_name,\r\n                game_name: serverStatus.game_name,\r\n                title: serverStatus.title,\r\n                thumbnail_url: serverStatus.thumbnail_url\r\n            });\r\n    }\r\n    return dataToReturn.sort((a, b) => b.game_name.length - a.game_name.length);\r\n};\r\n\r\nexport default processData;","import defaultServersTypes from \"./default-servers.types\";\r\nimport processData from \"./default-servers.utils\";\r\n\r\n\r\nconst INITIAL_STATE = {\r\n    isPending: null,\r\n    error: null,\r\n    serversData: null\r\n};\r\n\r\n\r\nconst defaultServersReducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case defaultServersTypes.DEFAULT_SERVERS_PENDING:\r\n            return {...state, isPending: true};\r\n        case defaultServersTypes.DEFAULT_SERVERS_FAILURE:\r\n            return {...state, isPending:false, error:action.payload};\r\n        case defaultServersTypes.DEFAULT_SERVERS_SUCCESS:\r\n            return {\r\n                ...state, \r\n                isPending: false, \r\n                serversData: processData(action.payload)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default defaultServersReducer;","import fetchUserTypes from \"./fetch-user.types\";\r\n\r\nconst INITIAL_STATE = {\r\n    isPending: null,\r\n    error: null,\r\n    fetchedUser: null\r\n};\r\n\r\nconst fetchUserReducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case fetchUserTypes.FETCH_USER_PENDING:\r\n            return {\r\n                ...state,\r\n                isPending: true\r\n            };\r\n        case fetchUserTypes.FETCH_USER_FAILURE:\r\n            return {\r\n                ...state,\r\n                isPending: false,\r\n                error: action.payload  \r\n            };\r\n        case fetchUserTypes.FETCH_USER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isPending: false,\r\n                fetchedUser: action.payload\r\n            };\r\n        case fetchUserTypes.RESET_USER:\r\n            return INITIAL_STATE;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default fetchUserReducer;","import {combineReducers} from \"redux\";\r\n\r\n// Reducers\r\nimport searchFieldReducer from \"./search-field/search-field.reducer\";\r\nimport defaultServersReducer from \"./default-servers/default-servers.reducer\";\r\nimport fetchUserReducer from \"./fetch-user/fetch-user.reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    searchField: searchFieldReducer,\r\n    defaultServers: defaultServersReducer,\r\n    fetchUser: fetchUserReducer\r\n});\r\n\r\nexport default rootReducer;","import {createStore, applyMiddleware} from \"redux\";\r\n\r\n// Middlewares\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport logger from \"redux-logger\";\r\n\r\n// Root Reducer\r\nimport rootReducer from \"./root-reducer\";\r\n\r\nconst middlewares = [thunkMiddleware];\r\n\r\nif (process.env.NODE_ENV === 'development')\r\n    middlewares.push(logger);\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// Styles\nimport './index.css';\n\n// Containers\nimport App from './containers/app.container';\nimport { Provider } from 'react-redux';\n\n// Redux store\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}